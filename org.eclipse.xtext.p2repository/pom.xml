<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.xtext</groupId>
		<artifactId>org.eclipse.xtext.nodeploy.parent</artifactId>
		<version>2.38.0-SNAPSHOT</version>
		<relativePath>../org.eclipse.xtext.nodeploy.parent</relativePath>
	</parent>
	<artifactId>org.eclipse.xtext.p2repository</artifactId>
	<packaging>eclipse-repository</packaging>

	<properties>
		<root-dir>${basedir}/..</root-dir>
		<zipFinalName>${project.artifactId}-${qualifiedVersion}</zipFinalName>
		<!-- Used for tycho-eclipserun-plugin -->
		<eclipse-version>2023-03</eclipse-version>
		<!-- For p2 mirroring -->
		<p2.mirrorsURL>https://www.eclipse.org/downloads/download.php?format=xml&amp;file=/modeling/tmf/xtext/${remote-subdir}/${project.version}</p2.mirrorsURL>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<configuration>
					<finalName>${zipFinalName}</finalName>
					<repositoryName>Xtext</repositoryName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy todir="${root-dir}/build/p2-repository">
									<fileset dir="${basedir}/target/repository/" />
								</copy>
								<copy
									file="${basedir}/target/${zipFinalName}.zip"
									tofile="${root-dir}/build/${project.artifactId}-${project.version}.zip">
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<!-- sets the following properties
						parsedVersion.majorVersion
						parsedVersion.minorVersion
						parsedVersion.incrementalVersion
						-->
						<execution>
							<id>parse-version</id>
							<goals>
								<goal>parse-version</goal>
							</goals>
							<phase>none</phase>
						</execution>
						<execution>
							<id>timestamp-replacement</id>
							<goals>
								<goal>regex-property</goal>
							</goals>
							<phase>none</phase>
							<configuration>
								<name>processedTimestamp</name>
								<value>${buildQualifier}</value>
								<regex>v(\d+)-(\d+)</regex>
								<replacement>$1$2</replacement>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>md5sum</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>md5sum</executable>
								<arguments>
									<argument>--binary</argument>
									<argument>./${zipFinalName}.zip</argument>
								</arguments>
								<workingDirectory>${project.build.directory}</workingDirectory>
								<outputFile>${project.build.directory}/${zipFinalName}.zip.md5</outputFile>
							</configuration>
						</execution>
						<!--
						Instead of <arguments> single elements, we use <commandlineArgs> to pass
						the whole command line argument on a single string.
						This allows us to safely pass empty properties like additional-rsync-commit-args
						without breaking the command line semantics (that's not possible with empty <argument>.
						However, the line cannot be split into several lines.
						-->
						<execution>
							<id>rsync-update</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<!--
								Exclude subdirectories of subdirectories:
								we copy locally only the metadata (artifacts/content) of existing child repos.
								This way, p2 can check the repository is atomic when it updates it
								-->
								<commandlineArgs>-azvc --exclude=*/*/ -e ssh ${rsync-remote-source} ${rsync-local-source}</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<id>rsync-commit</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<commandlineArgs>${additional-rsync-commit-args} -azvc -e ssh ${rsync-local-source} ${rsync-remote-source}</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<id>rsync-commit-zip</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<commandlineArgs>${additional-rsync-commit-args} -azvc -e ssh ${rsync-local-zip-source} ${rsync-remote-zip-source}</commandlineArgs>
							</configuration>
						</execution>
						<execution>
							<!-- this will delete files on the destination that are
								not present locally -->
							<id>rsync-replace</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>rsync</executable>
								<commandlineArgs>${additional-rsync-commit-args} -azvc --delete -e ssh ${rsync-local-source} ${rsync-remote-source}</commandlineArgs>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-repository</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${current-release-directory}</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/repository</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>copy-zipped-repository</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${current-release-zip-directory}</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}</directory>
										<includes>
											<include>*.zip</include>
											<include>*.md5</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho.extras</groupId>
					<artifactId>tycho-eclipserun-plugin</artifactId>
					<configuration>
						<repositories>
							<repository>
								<id>${eclipse-version}</id>
								<layout>p2</layout>
								<url>https://download.eclipse.org/releases/${eclipse-version}</url>
							</repository>
						</repositories>
						<dependencies>
							<dependency>
								<artifactId>org.eclipse.ant.core</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.apache.ant</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.repository.tools</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.core.feature</artifactId>
								<type>eclipse-feature</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.extras.feature</artifactId>
								<type>eclipse-feature</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.osgi.compatibility.state</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.rcp</artifactId>
								<type>eclipse-feature</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.core.net</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
						</dependencies>
					</configuration>
					<executions>
						<!-- add our new child repository -->
						<execution>
							<id>add-p2-composite-repository</id>
							<phase>none</phase>
							<goals>
								<goal>eclipse-run</goal>
							</goals>
							<configuration>
								<applicationsArgs>
									<args>-application</args>
									<args>org.eclipse.ant.core.antRunner</args>
									<args>-buildfile</args>
									<args>packaging-p2composite.ant</args>
									<args>p2.composite.add</args>
									<args>-Dsite.label=${site.label}</args>
									<args>-Dcomposite.base.dir=${rsync-local-source}</args>
									<args>-Dcomposite.child.dir=${current-release-subdirectory}</args>
								</applicationsArgs>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- Activate this profile to override the current snapshot version -->
			<id>release-snapshot</id>
			<properties>
				<remote-subdir>updates/nightly</remote-subdir>
				<!-- no subdirectory with qualifier for update site -->
				<current-release-directory>${releases-directory}</current-release-directory>
				<current-release-zip-subdirectory>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}/N${processedTimestamp}</current-release-zip-subdirectory>
				<zipFinalName>tmf-xtext-Update-N${processedTimestamp}</zipFinalName>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>parse-version</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>timestamp-replacement</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<!-- note that we don't first run rsync-update, so the result
						will be a complete override of the destination directory.
						We don't even create a composite update site -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>md5sum</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>rsync-replace</id>
								<phase>verify</phase>
							</execution>
							<execution>
								<id>rsync-commit-zip</id>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-repository</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>copy-zipped-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Activate this profile to perform a milestone release -->
			<id>release-milestone</id>
			<properties>
				<remote-subdir>updates/milestones</remote-subdir>
				<!-- Note that for versions of milestones ${qualifiedVersion} == ${project.version} -->
				<current-release-subdirectory>${qualifiedVersion}</current-release-subdirectory>
				<zipFinalName>tmf-xtext-Update-${qualifiedVersion}</zipFinalName>
				<site.label>TMF Xtext Update Site (Milestones)</site.label>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-repository-plugin</artifactId>
						<configuration>
							<extraArtifactRepositoryProperties>
								<p2.mirrorsURL>${p2.mirrorsURL}</p2.mirrorsURL>
							</extraArtifactRepositoryProperties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>md5sum</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>rsync-update</id>
								<phase>prepare-package</phase>
							</execution>
							<execution>
								<id>rsync-commit</id>
								<phase>verify</phase>
							</execution>
							<execution>
								<id>rsync-commit-zip</id>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-repository</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>copy-zipped-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-eclipserun-plugin</artifactId>
						<executions>
							<!-- add our new child repository -->
							<execution>
								<id>add-p2-composite-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Activate this profile to perform a final release -->
			<id>release-release</id>
			<properties>
				<remote-subdir>updates/releases</remote-subdir>
				<!-- Note that for versions of final releases ${qualifiedVersion} == ${project.version} -->
				<current-release-subdirectory>${qualifiedVersion}</current-release-subdirectory>
				<zipFinalName>tmf-xtext-Update-${qualifiedVersion}</zipFinalName>
				<site.label>TMF Xtext Update Site (Releases)</site.label>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-repository-plugin</artifactId>
						<configuration>
							<extraArtifactRepositoryProperties>
								<p2.mirrorsURL>${p2.mirrorsURL}</p2.mirrorsURL>
							</extraArtifactRepositoryProperties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>md5sum</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>rsync-update</id>
								<phase>prepare-package</phase>
							</execution>
							<execution>
								<id>rsync-commit</id>
								<phase>verify</phase>
							</execution>
							<execution>
								<id>rsync-commit-zip</id>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-repository</id>
								<phase>package</phase>
							</execution>
							<execution>
								<id>copy-zipped-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-eclipserun-plugin</artifactId>
						<executions>
							<!-- add our new child repository -->
							<execution>
								<id>add-p2-composite-repository</id>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
